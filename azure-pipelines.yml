# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest

variables:
- group: BlackDuck

steps:
- task: JavaToolInstaller@1
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: Bash@3
  displayName: 'Debug Info'
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo 'java version:'
      java -version
      echo 'Polaris URL: $(POLARIS_SERVER_URL)'
      echo 'Polaris Token: $(POLARIS_ACCESSTOKEN)'
      echo 'done.'

- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'compile'
    options: '-Dskiptests'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

#- task: BlackDuckSecurityScan@2.0.0
#  displayName: 'Polaris SAST Scan'
#  inputs:
#    POLARIS_SERVER_URL: $(POLARIS_SERVER_URL)
#    POLARIS_ACCESS_TOKEN: $(POLARIS_ACCESSTOKEN)
#    POLARIS_ASSESSMENT_TYPES: 'SAST'
#    
#    POLARIS_APPLICATION_NAME: 'SeanM ADO Test'
#    POLARIS_PROJECT_NAME: 'WebGoat'
#    POLARIS_BRANCH_NAME: 'BD Security Scan'

- task: BlackDuckSecurityScan@2
  displayName: 'Black Duck SCA Scan'
  env:
    DETECT_PROJECT_NAME: 'SeanM ADO Test'
  inputs:
    blackducksca_url: $(BLACKDUCKSCA_URL)
    blackducksca_token: $(BLACKDUCKSCA_API_TOKEN)